import{render,buildUrl}from"./utils.min.js";const shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>:host { display:block; }</style>\n    <slot></slot>\n";class DataTable extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.setAttribute("not-setup",""),this.state={list:null,hasBeenLoaded:!1}}static get observedAttributes(){return["col-link-template","col-link-fields","columns","labels","table-attr"]}attributeChangedCallback(t,e){switch(t){case"col-link-template":case"col-link-fields":case"columns":case"labels":case"table-attr":(null!==e||this.state.hasBeenLoaded)&&this.renderTable()}}get value(){return this.state.list}set value(t){this.state.list=t,this.renderTable()}renderTable(){const t=this.state.list;if(null===t||""===t)return void(this.innerHTML="");if(this.state.hasBeenLoaded=!0,Array.isArray(t)&&0===t.length)return this.innerHTML='<table class="no-data"></table>',void this.removeAttribute("not-setup");let e=!0;if(Array.isArray(t)?t.length>0&&"object"!=typeof t[0]&&(e=!1):e=!1,!e)return this.innerHTML='<table><caption class="error">Error invalid data type for table</capiton></table>',void this.removeAttribute("not-setup");const s=this.getAttribute("columns"),l=s?s.split(",").map(t=>t.trim()):Object.keys(t[0]);let r=l,i=this.getAttribute("labels");i&&(r=i.split(",").map(t=>t.trim())).length!==l.length&&(r=l);let a="<table",n=this.getAttribute("table-attr");if(n){n=n.split(",").map(t=>t.trim());for(const t of n){const e=t.indexOf("=");if(e>1){a+=render` ${t.substr(0,e).trim()}="${t.substr(e+1).trim()}"`}else a+=render` ${t}`}}const o=[];o.push(`${a}><thead><tr>`);for(const t of r)o.push(render`<th>${t}</th>`);o.push("</tr></thead>");const h=this.getAttribute("col-link-template");let d=this.getAttribute("col-link-fields");h&&(d=d?d.split(",").map(t=>t.trim()):[l[0]]),o.push("<tbody>");for(const e of t){const t=[];t.push("<tr>");for(const s of l)h&&d.includes(s)?t.push(render`<td>
                        <a href="${buildUrl(h,e)}">${e[s]}</a>
                    </td>`):t.push(render`<td>${e[s]}</td>`);t.push("</tr>"),o.push(t.join(""))}o.push("</tbody></table>"),this.innerHTML=o.join(""),this.removeAttribute("not-setup")}}window.customElements.define("data-table",DataTable);