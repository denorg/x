export default class Format{number(r){return formatNumber(r,{})}currency(r,e){return formatNumber(r,{style:"currency",currency:e,maximumFractionDigits:2})}percent(r,e=0){return formatNumber(r,{style:"percent",maximumFractionDigits:e,minimumFractionDigits:e})}date(r){return formatDateTime(r,{})}dateTime(r){return formatDateTime(r,{year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"})}time(r){return formatDateTime(r,{hour:"numeric",minute:"numeric",second:"numeric"})}};function isNumber(r){return!isNaN(parseFloat(r))&&isFinite(r)}function formatDateTime(r,e){if(void 0===window.Intl)return r;try{if(r instanceof Date)return new Intl.DateTimeFormat(navigator.language,e).format(r);var n=new Date(r);return new Intl.DateTimeFormat(navigator.language,e).format(n)}catch(n){return console.warn("Error formatting Date/Time Value:"),console.log(navigator.language),console.log(e),console.log(r),console.log(n),"Error"}}function formatNumber(r,e){var n,t,a,o,i,u=null,m=null,l=null;if(i=navigator.language?navigator.language:navigator.userLanguage,null===r||""===r)return null;if(!isNumber(r))return console.warn("Warning value specified in DateFormsJS Handlebars Helper function formatNumber() is not a number:"),console.log(r),r;if(void 0===window.Intl){if(n=e.style?e.style:null,t=e.maximumFractionDigits?e.maximumFractionDigits:0,"percent"===n)return(100*r).toFixed(t)+"%";switch(i){case"en-us":u=",",m=".",l="$"}return null!==u?((a=r.toString().split("."))[0]=a[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),o=a.join(m),"currency"===n?l+o:o):r}try{return new Intl.NumberFormat(i,e).format(r)}catch(n){return console.warn("Error formatting Numeric Value:"),console.log(i),console.log(e),console.log(r),console.log(n),"Error"}}