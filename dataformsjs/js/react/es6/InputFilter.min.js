import React from"react";export default class InputFilter extends React.Component{constructor(t){super(t),this.onChange=this.onChange.bind(this),this.input=React.createRef()}componentDidMount(){this.filter()}onChange(){this.filter(),"function"==typeof this.props.afterFilter&&this.props.afterFilter()}filter(){const t=this.input.current,e=t.value.toLowerCase().split(" "),n=e.length,s=0!==n;let l=0,r=null,o=null,i=document.querySelectorAll(this.props["filter-selector"]);if(1===i.length&&"TABLE"===i[0].tagName&&i[0].tHead&&1===i[0].tHead.rows.length&&1===i[0].tBodies.length){const t=i[0];r=t.getAttribute("data-sort-class-odd"),o=t.getAttribute("data-sort-class-even"),i=i[0].tBodies[0].rows}const a=i.length,u=o&&r;for(let t=0,a=i.length;t<a;t++){const a=i[t];let c=!0;if(s){const t=a.textContent.toLowerCase();for(let s=0;s<n;s++)if(""!==e[s]&&!t.includes(e[s])){c=!1;break}}c&&(l++,u&&(l%2==0?(a.classList.add(o),a.classList.remove(r)):(a.classList.add(r),a.classList.remove(o)))),a.style.display=c?"":"none"}const c=t.getAttribute("filter-results-selector");if(c){const e=document.querySelector(c);if(!e)return void console.warn("Defined [filter-results-selector] but element not found");const n=t.getAttribute("filter-results-text-all"),s=t.getAttribute("filter-results-text-filtered");if(null===n&&null===s)return void console.warn("Defined [filter-results-selector] without [filter-results-text-all] or [filter-results-text-filtered]");let r=null;l===a?r=n:null!==s&&(r=s.replace(/{displayCount}/g,l)),null===r?e.textContent="":(r=r.replace(/{totalCount}/g,a),e.textContent=r)}}render(){return void 0!==window&&window.React===window.preact?React.createElement("input",Object.assign({},this.props,{onInput:this.onChange,ref:this.input})):React.createElement("input",Object.assign({},this.props,{onChange:this.onChange,ref:this.input}))}};