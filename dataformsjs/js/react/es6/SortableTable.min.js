import React from"react";export default class SortableTable extends React.Component{constructor(e){super(e),this.sortColumn=this.sortColumn.bind(this),this.table=React.createRef()}componentDidMount(){this.setupTable()}setupTable(){const e=this.table.current;if(null===e.tHead)return console.warn("Unable to setup sorting for table because there is no <thead> element"),void console.log(e);if(0===e.tHead.rows.length)return console.warn("Unable to setup sorting for table because the <thead> element contained now rows"),void console.log(e);if(0===e.tBodies.length)return console.warn("Unable to setup sorting for table because the <tbody> element is missing"),void console.log(e);if(1!==e.tBodies.length)return console.warn("Unable to setup sorting for table because there can only be one <tbody> element for the table"),void console.log(e);const t=e.tHead.rows[e.tHead.rows.length-1];for(let e=0,l=t.cells.length;e<l;e++)t.cells[e].addEventListener("click",this.sortColumn),t.cells[e].style.cursor="pointer"}sortColumn(e){const t=e.target,l=t&&t.parentElement&&t.parentElement.parentElement?t.parentElement.parentElement.parentElement:null;if("TH"!==t.tagName&&"TD"!==t.tagName)return console.warn("SortableTable.sortColumn() was called with an invalid element. If called manually the cell needs to be passed."),void console.log(t);if(null!==l&&void 0!==l&&"TABLE"!==l.tagName)return console.warn("SortableTable.sortColumn() was called with an invalid element. If called manually the table cell of the last row from the table header should be used."),void console.log(t);const o=l.getAttribute("data-sort-column"),a=t.cellIndex;let n="asc";if(null!==o&&parseInt(o,10)===a){n="asc"===l.getAttribute("data-sort-order")?"desc":"asc"}const s=l.tBodies[0],r=s.rows,u=[];for(let e=0,t=r.length;e<t;e++){const t=r[e].cells[a];if(void 0===t)continue;const l=t.getAttribute("data-value");let o=null!==l?l.trim():t.textContent.trim(),n=typeof o;if(""===o)o=null;else if(isNaN(o)){const e=new Date(o);isNaN(e.getTime())?o=void 0!==o.toLocaleLowerCase?o.toLocaleLowerCase():o.toLowerCase():(o=e,n="date")}else o=parseFloat(o);u.push({row:r[e],value:o,type:null===o?null:n})}u.sort(this.sortCompare),"desc"===n&&u.reverse();const c=l.getAttribute("data-sort-class-odd"),i=l.getAttribute("data-sort-class-even"),d=c&&i;let p=0;for(let e=0,t=u.length;e<t;e++){const t=u[e].row;d&&"none"!==t.style.display&&(++p%2==0?(t.classList.add(i),t.classList.remove(c)):(t.classList.add(c),t.classList.remove(i))),s.appendChild(t)}l.setAttribute("data-sort-column",a),l.setAttribute("data-sort-order",n)}sortCompare(e,t){return null===e.type&&null!==t.type?-1:null===t.type&&null!==e.type?1:null===e.type&&null===t.type?0:"number"===e.type&&"number"!==t.type?-1:"number"===t.type&&"number"!==e.type?1:"number"===e.type&&"number"===t.type?e.value-t.value:"date"===e.type&&"date"!==t.type?-1:"date"===t.type&&"date"!==e.type?1:"date"===e.type&&"date"===t.type?e.value<t.value?-1:e.value>t.value?1:0:"string"===e.type&&"string"===t.type?void 0!==e.value.localeCompare?e.value.localeCompare(t.value):e.value<t.value?-1:e.value>t.value?1:0:(console.warn("A code change from [SortableTable] impacted sorting and caused an expected error so the data may appear out of order. Please review your code changes"),0)}render(){return React.createElement("table",Object.assign({},this.props,{ref:this.table}),this.props.children)}};